// Вспомогательные операторы присутствующие в TS для взаимодействия с типами

// для примера создадим interface с двумя полями
interface Person {
  name: string
  age: number
}
// теперь используя данный интерфейс можно создать отдельный тип который будет состоять из ключей данного интерфейса
// применим оператор keyof к интерфейсу Person
// и теперь на выходе в типе PersonKeys могут находится следущие значения 'name' | 'age'
type PersonKeys = keyof Person
// проверим это
// создадим переменную key которая будет являться типом PersonKeys и занесем в нее значение переменной 'name'
let key: PersonKeys = 'name'
// также можно поменять значение key на 'age'
key = 'age'
// но если попытаться поменять на другой ключь не объявленный в интерфейсе будет ошибка
// key = "job"
// в некоторых ситуациях для перечисления ключей это бывает полезным

// ======= втрой пример
// создадим тип User котором укажем метаданные и обычные данные
type User = {
  _id: number
  name: string
  email: string
  createdAt: Date
}
// предположим что мы хотим воспользоваться данным типом и при этом создать свой новый тип но не включающиий в себя некоторые поля, например _id и createdAt

// это можно реализовать двумя способами
// 1 способ
// создадим новый type с использованием специального ключего слова Exclude и указания в треугольных скобках что именно нужно сделать, в первую очередь с помощью оператора keyof пробежимся по типу User, и дальше через запятую говорим ему  что нужно исключить

type UserKeysNoMeta1 = Exclude<keyof User, '_id' | 'createdAt'>
// теперь в типе UserKeysNoMeta присутствуют только поля 'name' и 'email'

// 2 способ
// для создания подобного типа
// воспользуемся другим ключом Pick, после в треугольных скобках указываем с каким типом мы работаем <User>, и через запятую указываем какие поля нам наоборот нужно забрать, 'name' и 'email'
type UserKeysNoMeta2 = Pick<User, 'name' | 'email'>

// теперь можно создавать различные переменные которые будут принимать в себя нужные значения
// let u1: UserKeysNoMeta1 = 'name'
// u1 = '_id' // ошибка такого поля уже нет
