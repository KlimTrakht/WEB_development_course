// interfaces нужны для создания некое типа, который служит для объекток или классов, где мы указываем какие поля, функции и какие вообще элементы должны присутствовать у этих объектов
// interfaces ни во что не компилируются
// для того что бы завести interface используем ключевое слово interface, затем указываем его название, в скобках описываем его параметры
// параметры указываются с типами (указали параметр id с типом string, + указали что это поле только для чтения readonly)
// знак ? после названия параметра, указывает что этот параметр НЕ ОБЯЗАТЕЛЬНЫЙ
// в параметрах можно указывать и объекты (size)
interface Rect {
  readonly id: string
  color?: string
  size: {
    width: number
    height: number
  }
}

// теперь можно создать разлчные объекты которые будут являться типом Rect
const rect1: Rect = {
  id: 'squre',
  size: {
    width: 5,
    height: 10,
  },
  color: '#ccc',
}

// создадим второй объект без поля color (тоже будет крректно)
const rect2: Rect = {
  id: 'squre2',
  size: {
    width: 10,
    height: 20,
  },
}
// поле color также можно назначить ниже просто прописав
rect2.color = 'gold'

// с объектами и интерфейсами можно также указывать к какому типу будет относиться объект
// создадим по умолчанию пустой объект, и строго укажем ему тип Rect (as Rect)
const rect3 = {} as Rect
// альтернативная старая запись указания типа объекта (<Rect>)
const rect4 = <Rect>{}

// ========================================

// Наследование интерфейсов
